--[[
⚙️ ThaytuberVN Framework (Rayfield-style)
✅ Features:
- CreateWindow
- Drag UI
- Toggle visibility with keybind
- Rainbow border toggle in Settings
- Setting icon + menu
]]

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Framework = {}

local function createRainbowBorder(frame)
    local hue = 0
    local running = true
    local border = Instance.new("UIStroke")
    border.Thickness = 2
    border.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    border.Parent = frame

    task.spawn(function()
        while running do
            hue = (hue + 1) % 360
            border.Color = ColorSequence.new(Color3.fromHSV(hue / 360, 1, 1))
            task.wait(0.03)
        end
    end)

    return border, function()
        running = false
        border:Destroy()
    end
end

function Framework:CreateWindow(config)
    config = config or {}
    local name = config.Name or "My Menu"
    local key = config.ToggleUIKeybind or "K"
    local enableDrag = config.EnableDrag ~= false
    local enableRainbow = config.RainbowBorder == true

    -- Main ScreenGui
    local gui = Instance.new("ScreenGui")
    gui.Name = "CustomUI"
    gui.ResetOnSpawn = false
    gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Main Frame
    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 400, 0, 300)
    main.Position = UDim2.new(0.5, -200, 0.5, -150)
    main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    main.BorderSizePixel = 0
    main.ClipsDescendants = true
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.Parent = gui

    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0, 8)
    uicorner.Parent = main

    local title = Instance.new("TextLabel")
    title.Text = name
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 18
    title.Parent = main

    -- Settings button
    local gear = Instance.new("ImageButton")
    gear.Size = UDim2.new(0, 24, 0, 24)
    gear.Position = UDim2.new(0, 4, 0, 3)
    gear.BackgroundTransparency = 1
    gear.Image = "rbxassetid://6031091002"
    gear.Parent = main

    -- Settings Frame
    local settings = Instance.new("Frame")
    settings.Size = UDim2.new(1, 0, 1, 0)
    settings.Position = UDim2.new(1, 0, 0, 0)
    settings.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    settings.Visible = false
    settings.Parent = main

    local settingTitle = Instance.new("TextLabel")
    settingTitle.Text = "Settings"
    settingTitle.Size = UDim2.new(1, 0, 0, 30)
    settingTitle.BackgroundTransparency = 1
    settingTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    settingTitle.Font = Enum.Font.GothamBold
    settingTitle.TextSize = 18
    settingTitle.Parent = settings

    local rainbowToggle = Instance.new("TextButton")
    rainbowToggle.Text = "Toggle Rainbow Border"
    rainbowToggle.Size = UDim2.new(0.8, 0, 0, 30)
    rainbowToggle.Position = UDim2.new(0.1, 0, 0, 40)
    rainbowToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    rainbowToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    rainbowToggle.Font = Enum.Font.Gotham
    rainbowToggle.TextSize = 14
    rainbowToggle.Parent = settings

    local rainbowBorder, stopRainbow
    if enableRainbow then
        rainbowBorder, stopRainbow = createRainbowBorder(main)
    end

    rainbowToggle.MouseButton1Click:Connect(function()
        enableRainbow = not enableRainbow
        if enableRainbow then
            rainbowBorder, stopRainbow = createRainbowBorder(main)
        elseif stopRainbow then
            stopRainbow()
        end
    end)

    -- Open/Close Settings
    gear.MouseButton1Click:Connect(function()
        settings.Visible = not settings.Visible
    end)

    -- Drag
    if enableDrag then
        local dragging = false
        local offset
        title.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                offset = input.Position - main.Position
            end
        end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                main.Position = UDim2.new(0, input.Position.X - offset.X.Offset, 0, input.Position.Y - offset.Y.Offset)
            end
        end)
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
    end

    -- Toggle Key
    local isVisible = true
    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode[key] then
            isVisible = not isVisible
            local goal = { Size = isVisible and UDim2.new(0, 400, 0, 300) or UDim2.new(0, 0, 0, 0), Transparency = isVisible and 0 or 1 }
            TweenService:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Quad), { Size = goal.Size }):Play()
            main.Visible = isVisible
        end
    end)

    print("[Framework] Menu đã được mở thành công!")

    local API = {}

    function API:CreateButton(cfg)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0.9, 0, 0, 30)
        btn.Position = UDim2.new(0.05, 0, 0, 60)
        btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.TextSize = 14
        btn.Font = Enum.Font.Gotham
        btn.Text = cfg.Name or "Button"
        btn.Parent = main
        btn.MouseButton1Click:Connect(function()
            if cfg.Callback then cfg.Callback() end
        end)
    end

    return API
end

return function()
    return Framework
end

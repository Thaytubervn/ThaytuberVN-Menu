--[[
ðŸŒˆ ThaytuberVN UI Framework v2 (Rayfield-style)
âœ… Tab system | âœ… RGB Border | âœ… Smooth drag | âœ… Keybind toggle
--]]

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local Framework = {}

local function CreateRainbowFrame(parent)
    local border = Instance.new("Frame")
    border.Size = UDim2.new(1, 8, 1, 8)
    border.Position = UDim2.new(0, -4, 0, -4)
    border.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    border.BorderSizePixel = 0
    border.ZIndex = 0
    border.Name = "RainbowBorder"
    border.Parent = parent

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = border

    local hue = 0
    local running = true
    coroutine.wrap(function()
        while running and border.Parent do
            hue = (hue + 1) % 360
            border.BackgroundColor3 = Color3.fromHSV(hue/360, 1, 1)
            task.wait(0.02)
        end
    end)()

    return border, function()
        running = false
        border:Destroy()
    end
end

function Framework:CreateWindow(config)
    config = config or {}
    local name = config.Name or "Menu"
    local key = config.ToggleUIKeybind or "K"

    local gui = Instance.new("ScreenGui")
    gui.Name = "FrameworkUI"
    gui.ResetOnSpawn = false
    gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 500, 0, 350)
    main.Position = UDim2.new(0.5, -250, 0.5, -175)
    main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    main.BorderSizePixel = 0
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.ClipsDescendants = true
    main.Parent = gui

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = main

    local title = Instance.new("TextLabel")
    title.Text = name
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.new(1, 1, 1)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 18
    title.Parent = main

    -- Tabs container
    local tabButtons = Instance.new("Frame")
    tabButtons.Size = UDim2.new(1, 0, 0, 35)
    tabButtons.Position = UDim2.new(0, 0, 0, 30)
    tabButtons.BackgroundTransparency = 1
    tabButtons.Parent = main

    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, 0, 1, -65)
    contentFrame.Position = UDim2.new(0, 0, 0, 65)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Name = "TabContent"
    contentFrame.Parent = main

    local tabs = {}
    local currentTab = nil

    local function switchTo(tab)
        for _, t in ipairs(contentFrame:GetChildren()) do
            if t:IsA("Frame") then
                t.Visible = false
            end
        end
        for _, b in ipairs(tabButtons:GetChildren()) do
            if b:IsA("TextButton") then
                b.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            end
        end
        tab.Frame.Visible = true
        tab.Button.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
        currentTab = tab
    end

    local API = {}

    function API:CreateTab(tabName)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 100, 1, 0)
        button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Font = Enum.Font.Gotham
        button.TextSize = 14
        button.Text = tabName
        button.Parent = tabButtons

        local tabFrame = Instance.new("Frame")
        tabFrame.Size = UDim2.new(1, 0, 1, 0)
        tabFrame.BackgroundTransparency = 1
        tabFrame.Visible = false
        tabFrame.Parent = contentFrame

        button.MouseButton1Click:Connect(function()
            switchTo({ Frame = tabFrame, Button = button })
        end)

        local tabAPI = {}

        function tabAPI:CreateButton(cfg)
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(0, 200, 0, 30)
            btn.Position = UDim2.new(0, 10, 0, #tabFrame:GetChildren() * 35)
            btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            btn.TextColor3 = Color3.new(1, 1, 1)
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.Text = cfg.Name or "Button"
            btn.Parent = tabFrame
            btn.MouseButton1Click:Connect(function()
                if cfg.Callback then cfg.Callback() end
            end)
        end

        return tabAPI
    end

    -- Toggle visibility with key
    local visible = true
    UserInputService.InputBegan:Connect(function(input, gpe)
        if not gpe and input.KeyCode == Enum.KeyCode[key] then
            visible = not visible
            main.Visible = visible
        end
    end)

    -- Drag system improved
    local dragging = false
    local dragStart = Vector2.new()
    local startPos = UDim2.new()

    title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = main.Position
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    RunService.RenderStepped:Connect(function()
        if dragging then
            local delta = UserInputService:GetMouseLocation() - dragStart
            main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- RGB border toggle
    local rainbowBorder, stopRGB = CreateRainbowFrame(main)

    function API:ToggleRGB(state)
        if state and not rainbowBorder then
            rainbowBorder, stopRGB = CreateRainbowFrame(main)
        elseif not state and stopRGB then
            stopRGB()
            rainbowBorder = nil
        end
    end

    print("[Framework] UI created.")
    return API
end

return function()
    return Framework
end

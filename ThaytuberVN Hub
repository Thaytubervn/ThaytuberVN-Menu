local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

local Framework = {}
local rainbowRunning = false

local function createRGBFrame(parent)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 8, 1, 8)
    frame.Position = UDim2.new(0, -4, 0, -4)
    frame.BackgroundTransparency = 1
    frame.ZIndex = 0
    frame.Parent = parent

    local uiGradient = Instance.new("UIGradient")
    uiGradient.Rotation = 0
    uiGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromHSV(0, 1, 1)),
        ColorSequenceKeypoint.new(1, Color3.fromHSV(1, 1, 1))
    })
    uiGradient.Parent = frame

    coroutine.wrap(function()
        while rainbowRunning do
            uiGradient.Rotation = (uiGradient.Rotation + 1) % 360
            task.wait(0.01)
        end
    end)()

    return frame
end

function Framework:CreateWindow(config)
    config = config or {}
    local toggleKey = config.ToggleUIKeybind or Enum.KeyCode.K
    local enableDrag = config.EnableDrag ~= false
    local player = Players.LocalPlayer

    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.ResetOnSpawn = false
    gui.Name = "RayUI"

    -- Main Container
    local holder = Instance.new("Frame")
    holder.Size = UDim2.new(0, 500, 0, 350)
    holder.Position = UDim2.new(0.5, 0, 0.5, 0)
    holder.AnchorPoint = Vector2.new(0.5, 0.5)
    holder.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    holder.ClipsDescendants = true
    holder.Visible = false
    holder.Parent = gui

    local corner = Instance.new("UICorner", holder)
    corner.CornerRadius = UDim.new(0, 10)

    local rainbow = createRGBFrame(holder)
    rainbowRunning = true

    -- TopBar
    local top = Instance.new("Frame")
    top.Size = UDim2.new(1, 0, 0, 36)
    top.BackgroundTransparency = 1
    top.Name = "Top"
    top.Parent = holder

    local title = Instance.new("TextLabel", top)
    title.Text = config.Name or "Framework UI"
    title.Size = UDim2.new(1, -80, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16

    -- Tab Buttons
    local tabs = {}
    local currentTab = nil

    local function switchTab(tabName)
        for name, elements in pairs(tabs) do
            local isVisible = name == tabName and currentTab ~= tabName
            elements.Frame.Visible = isVisible
            elements.Button.BackgroundColor3 = isVisible and Color3.fromRGB(50, 50, 50) or Color3.fromRGB(35, 35, 35)
        end
        currentTab = currentTab == tabName and nil or tabName
    end

    local buttonHolder = Instance.new("Frame", holder)
    buttonHolder.Position = UDim2.new(0, 0, 0, 36)
    buttonHolder.Size = UDim2.new(1, 0, 0, 36)
    buttonHolder.BackgroundTransparency = 1

    local function createTab(name)
        local btn = Instance.new("TextButton", buttonHolder)
        btn.Size = UDim2.new(0, 100, 1, 0)
        btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        btn.Text = name
        btn.Font = Enum.Font.Gotham
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.TextSize = 14

        local tabFrame = Instance.new("Frame", holder)
        tabFrame.Position = UDim2.new(0, 0, 0, 72)
        tabFrame.Size = UDim2.new(1, 0, 1, -72)
        tabFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        tabFrame.Visible = false

        local layout = Instance.new("UIListLayout", tabFrame)
        layout.Padding = UDim.new(0, 6)

        btn.MouseButton1Click:Connect(function()
            switchTab(name)
        end)

        tabs[name] = { Frame = tabFrame, Button = btn }
        return tabFrame
    end

    local playerTab = createTab("Player")
    local settingTab = createTab("Setting")

    -- Rainbow toggle in settings
    local toggle = Instance.new("TextButton", settingTab)
    toggle.Size = UDim2.new(1, -20, 0, 30)
    toggle.Position = UDim2.new(0, 10, 0, 10)
    toggle.Text = "Toggle Rainbow"
    toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggle.Font = Enum.Font.Gotham
    toggle.TextSize = 14

    toggle.MouseButton1Click:Connect(function()
        rainbow.Visible = not rainbow.Visible
    end)

    -- Dragging
    if enableDrag then
        local dragging, dragInput, startPos, startInput
        top.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                startInput = input
                startPos = holder.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then dragging = false end
                end)
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if dragging and input == UserInputService:GetMouseDelta() then
                local delta = UserInputService:GetMouseDelta()
                holder.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
    end

    -- Toggle UI
    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == toggleKey then
            holder.Visible = not holder.Visible
            if holder.Visible then
                holder.Size = UDim2.new(0, 0, 0, 0)
                TweenService:Create(holder, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(0, 500, 0, 350)
                }):Play()
            end
        end
    end)

    return {
        CreateButton = function(tab, text, callback)
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(1, -20, 0, 32)
            btn.Position = UDim2.new(0, 10, 0, 0)
            btn.Text = text
            btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.Parent = tabs[tab].Frame
            btn.MouseButton1Click:Connect(callback)
        end
    }
end

return Framework
